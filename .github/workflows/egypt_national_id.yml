name: egypt_national_id CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

permissions:
  contents: read
  checks: write

jobs:
  build:
    runs-on: ubuntu-latest


    env:
      DATABASE_URL: postgresql+asyncpg://testuser:testpassword@localhost:5432/testdb
      TEST_DATABASE_URL: postgresql+asyncpg://testuser:testpassword@localhost:5432/testdb


    services:
      postgres:
        image: postgres:17
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name:  Checkout repository
        uses: actions/checkout@v4


      - name:  Set up Python 3.13.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.13.7"

      - name:  Install Poetry
        run: pip install poetry==2.1.4

      - name:  Install dependencies
        run: |
          cd national_id_api
          poetry config virtualenvs.create false
          poetry install --with dev --no-root
          poetry add --dev autopep8
      - name: Format code with autopep8
        run: |
           cd national_id_api
           poetry run autopep8 --in-place --recursive --max-line-length 500 .

      - name:  Run Alembic migrations
        run: |
          cd national_id_api
          poetry run alembic upgrade head



      # - name: Run tests with pytest
      #   run: |
      #     cd national_id_api
      #     poetry run pytest
      - name: Run tests with coverage
        run: |
          cd national_id_api
          mkdir -p tests/reports
          poetry run pytest tests/ \
            --tb=short \
            --disable-warnings \
            --cov=. \
            --cov-config=.coveragerc \
            --cov-report=xml:tests/reports/coverage.xml \
            --cov-report=term \
            --junitxml=tests/reports/pytest-results.xml | tee tests/reports/pytest-results.txt
        continue-on-error: true

      - name: Publish test results to PR
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: "national_id_api/tests/reports/pytest-results.xml"

      - name: Show test summary and coverage in PR
        run: |
          cd national_id_api
          echo "###  Test & Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          grep -A 1000 "^Name.*Stmts" tests/reports/pytest-results.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY